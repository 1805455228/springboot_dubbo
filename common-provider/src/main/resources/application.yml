#spring:
#  datasource:
#    druid:
#      stat-view-servlet:
#        loginUsername: admin
#        loginPassword: 123456
#    dynamic:
#      druid:
#      #以下是全局默认值，可以全局更改
#      #        filters: stat
#      #        initial-size:
#      #        max-active:
#      #        min-idle:
#      #        max-wait:
#      #        time-between-eviction-runs-millis:
#      #        time-between-log-stats-millis:
#      #        stat-sqlmax-size:
#      #        min-evictable-idle-time-millis:
#      #        max-evictable-idle-time-millis:
#      #        test-while-idle:
#      #        test-on-borrow:
#      #        test-on-return:
#      #        validation-query:
#      #        validation-query-timeout:
#      #        use-global-datasource-stat:
#      #        async-init:
#      #        clear-filters-enable:
#      #        reset-stat-enable:
#      #        not-full-timeout-retry-count:
#      #        max-wait-thread-count:
#      #        fail-fast:
#      #        phyTimeout-millis:
#      #        keep-alive:
#      #        pool-prepared-statements:
#      #        init-variants:
#      #        init-global-variants:
#      #        use-unfair-lock:
#      #        kill-when-socket-read-timeout:
#      #        connection-properties:
#      #        max-pool-prepared-statement-per-connection-size:
#      #        init-connection-sqls:
#      #        share-prepared-statements:
#      #        connection-errorretry-attempts:
#      #        break-after-acquire-failure:
#      #        filters: stat,wall # 注意这个值和druid原生不一致，默认启动了stat,wall
#      #        wall:
#      #          noneBaseStatementAllow:
#      #          callAllow:
#      #          selectAllow:
#      #          selectIntoAllow:
#      #          selectIntoOutfileAllow:
#      #          selectWhereAlwayTrueCheck:
#      #          selectHavingAlwayTrueCheck:
#      #          selectUnionCheck:
#      #          selectMinusCheck:
#      #          selectExceptCheck:
#      #          selectIntersectCheck:
#      #          createTableAllow:
#      #          dropTableAllow:
#      #          alterTableAllow:
#      #          renameTableAllow:
#      #          hintAllow:
#      #          lockTableAllow:
#      #          startTransactionAllow:
#      #          blockAllow:
#      #          conditionAndAlwayTrueAllow:
#      #          conditionAndAlwayFalseAllow:
#      #          conditionDoubleConstAllow:
#      #          conditionLikeTrueAllow:
#      #          selectAllColumnAllow:
#      #          deleteAllow:
#      #          deleteWhereAlwayTrueCheck:
#      #          deleteWhereNoneCheck:
#      #          updateAllow:
#      #          updateWhereAlayTrueCheck:
#      #          updateWhereNoneCheck:
#      #          insertAllow:
#      #          mergeAllow:
#      #          minusAllow:
#      #          intersectAllow:
#      #          replaceAllow:
#      #          setAllow:
#      #          commitAllow:
#      #          rollbackAllow:
#      #          useAllow:
#      #          multiStatementAllow:
#      #          truncateAllow:
#      #          commentAllow:
#      #          strictSyntaxCheck:
#      #          constArithmeticAllow:
#      #          limitZeroAllow:
#      #          describeAllow:
#      #          showAllow:
#      #          schemaCheck:
#      #          tableCheck:
#      #          functionCheck:
#      #          objectCheck:
#      #          variantCheck:
#      #          mustParameterized:
#      #          doPrivilegedAllow:
#      #          dir:
#      #          tenantTablePattern:
#      #          tenantColumn:
#      #          wrapAllow:
#      #          metadataAllow:
#      #          conditionOpXorAllow:
#      #          conditionOpBitwseAllow:
#      #          caseConditionConstAllow:
#      #          completeInsertValuesCheck:
#      #          insertValuesCheckSize:
#      #          selectLimit:
#      #        stat:
#      #          merge-sql:
#      #          log-slow-sql:
#      #          slow-sql-millis:
#      datasource:
#        master:
#          username: root
#          password: root
#          url: jdbc:mysql://101.200.55.12:10000/duo_data?characterEncoding=utf8&serverTimezone=Asia/Shanghai
#          driver-class-name: com.mysql.cj.jdbc.Driver
#          type: com.alibaba.druid.pool.DruidDataSource
#          schema: db/schema.sql
#          druid: #这里可以重写默认值
#            initial-size: 5
#            public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKUVA/IL/iON8f63bv2i/pIAK+1sXY228slLkTKrI9axwBMIoPV7+PqdRTv6uqMl3j6nei0EDBWEu/Wp/qOQ/ScCAwEAAQ==
#        slave_1:
#          username: root
#          password: root
#          url: jdbc:mysql://101.200.55.12:10001/duo_data?characterEncoding=utf8&serverTimezone=Asia/Shanghai
#          driver-class-name: com.mysql.cj.jdbc.Driver
#          type: com.alibaba.druid.pool.DruidDataSource
#          druid:
#            initial-size: 6
##        slave_2:
##          username: sa
##          password: "123456"
##          url: jdbc:h2:mem:test
##          driver-class-name: org.h2.Driver
##        slave_3:
##          username: sa
##            driver-class-name: org.h2.Driver
##          password: "123456"
##          url: jdbc:h2:mem:test
##      druid:
##        wall:
##          multi-statement-allow: true
#logging:
#  level:
#    com.baomidou: debug
#    org.springframework.jdbc.datasource.init: debug
#
## 生成 publickey 和密码
## java -cp druid-1.1.10.jar com.alibaba.druid.filter.config.ConfigTools youpassword
#
#


spring:
  datasource:
    druid:
      stat-view-servlet:
        loginUsername: admin
        loginPassword: 123456
    dynamic:
      druid: #以下是全局默认值，可以全局更改
        initial-size:
        max-active:
        min-idle:
        max-wait:
        time-between-eviction-runs-millis:
        time-between-log-stats-millis:
        stat-sqlmax-size:
        min-evictable-idle-time-millis:
        max-evictable-idle-time-millis:
        test-while-idle:
        test-on-borrow:
        test-on-return:
        validation-query:
        validation-query-timeout:
        use-global-datasource-stat:
        async-init:
        clear-filters-enable:
        reset-stat-enable:
        not-full-timeout-retry-count:
        max-wait-thread-count:
        fail-fast:
        phyTimeout-millis:
        keep-alive:
        pool-prepared-statements:
        init-variants:
        init-global-variants:
        use-unfair-lock:
        kill-when-socket-read-timeout:
        connection-properties:
        max-pool-prepared-statement-per-connection-size:
        init-connection-sqls:
        share-prepared-statements:
        connection-errorretry-attempts:
        break-after-acquire-failure:
        filters: stat,wall # 注意这个值和druid原生不一致，默认启动了stat,wall
        wall:
          noneBaseStatementAllow:
          callAllow:
          selectAllow:
          selectIntoAllow:
          selectIntoOutfileAllow:
          selectWhereAlwayTrueCheck:
          selectHavingAlwayTrueCheck:
          selectUnionCheck:
          selectMinusCheck:
          selectExceptCheck:
          selectIntersectCheck:
          createTableAllow:
          dropTableAllow:
          alterTableAllow:
          renameTableAllow:
          hintAllow:
          lockTableAllow:
          startTransactionAllow:
          blockAllow:
          conditionAndAlwayTrueAllow:
          conditionAndAlwayFalseAllow:
          conditionDoubleConstAllow:
          conditionLikeTrueAllow:
          selectAllColumnAllow:
          deleteAllow:
          deleteWhereAlwayTrueCheck:
          deleteWhereNoneCheck:
          updateAllow:
          updateWhereAlayTrueCheck:
          updateWhereNoneCheck:
          insertAllow:
          mergeAllow:
          minusAllow:
          intersectAllow:
          replaceAllow:
          setAllow:
          commitAllow:
          rollbackAllow:
          useAllow:
          multiStatementAllow:
          truncateAllow:
          commentAllow:
          strictSyntaxCheck:
          constArithmeticAllow:
          limitZeroAllow:
          describeAllow:
          showAllow:
          schemaCheck:
          tableCheck:
          functionCheck:
          objectCheck:
          variantCheck:
          mustParameterized:
          doPrivilegedAllow:
          dir:
          tenantTablePattern:
          tenantColumn:
          wrapAllow:
          metadataAllow:
          conditionOpXorAllow:
          conditionOpBitwseAllow:
          caseConditionConstAllow:
          completeInsertValuesCheck:
          insertValuesCheckSize:
          selectLimit:
        stat:
          merge-sql:
          log-slow-sql:
          slow-sql-millis:
      datasource:
        master:
          username: root
          password: root
          driver-class-name: com.mysql.jdbc.Driver
          type: com.alibaba.druid.pool.DruidDataSource
          url: jdbc:mysql://101.200.55.12:10000/duo_data?characterEncoding=utf8&serverTimezone=Asia/Shanghai
        #          druid: # 以下参数针对每个库可以重新设置druid参数
        #            initial-size:
        #            validation-query: select 1 FROM DUAL #比如oracle就需要重新设置这个
        #            public-key: #（非全局参数）设置即表示启用加密,底层会自动帮你配置相关的连接参数和filter。
        slave_1:
          username: root
          password: root
          driver-class-name: com.mysql.jdbc.Driver
          type: com.alibaba.druid.pool.DruidDataSource
          url: jdbc:mysql://101.200.55.12:10001/duo_data?characterEncoding=utf8&serverTimezone=Asia/Shanghai
        slave_2:
          username: root
          password: 123456
          driver-class-name: com.mysql.jdbc.Driver
          type: com.alibaba.druid.pool.DruidDataSource
          url: jdbc:mysql://101.200.55.12:3306/duo_data?characterEncoding=utf8&serverTimezone=Asia/Shanghai
#          druid: # 以下参数针对每个库可以重新设置druid参数
#            initial-size:
#            validation-query: select 1 FROM DUAL #比如oracle就需要重新设置这个
#            public-key: #（非全局参数）设置即表示启用加密,底层会自动帮你配置相关的连接参数和filter。
#           ......

# 生成 publickey 和密码
# java -cp druid-1.1.10.jar com.alibaba.druid.filter.config.ConfigTools youpassword
